<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.allabo.dao.BoardDao">
<!-- useGeneratedKeys="true"  keyProperty="postSeq" -->
	<insert id="insertPostAndGetPostSeq" parameterType="com.allabo.vo.PostVO" useGeneratedKeys="true"  keyProperty="postSeq" >
		INSERT INTO posts (
			tag
			, title
			, content
			, created_at
			, view_count
			, file_seq
			, ut_seq
		) VALUES (
			#{tag}
			,#{title}
			,#{content}
			,NOW()
			,0
			,#{fileSeq}
			,#{utSeq}
		)
	</insert>
	
	<select id="selectOnePost" resultType="com.allabo.vo.PostVO">
		SELECT 
			p.post_seq
			, p.tag
			, p.title
			, p.content
			, p.created_at
			, p.updated_at
			, p.view_count
			, p.file_seq
			, p.ut_seq 
			, ut.user_id
			, ut.team_seq AS teamSeq
			, ut.role
			, ut.nick
		FROM posts p
		LEFT JOIN users_team ut
		on p.ut_seq = ut.ut_seq
		WHERE p.post_seq = #{postSeq} 		
	</select>
	
	<select id="selectPostList" resultType="com.allabo.vo.PostVO">
		SELECT 
				pn.no AS no
 				, pn.post_seq AS postSeq
				, pn.tag AS tag
				, pn.title AS title
				, pn.content AS content
				, pn.created_at AS createdAt
				, pn.updated_at AS updatedAt
				, pn.view_count AS viewCount
				, pn.file_seq AS fileSeq
				, pn.ut_seq   AS utSeq
				, pn.user_id AS userId
				, pn.team_seq AS teamSeq
				, pn.role AS role
				, pn.nick AS nick
				, pn.totalComments AS totalComments
				, pn.totalLikes AS totalLikes
		FROM (
			SELECT 
				row_number() OVER(ORDER BY p.created_at DESC) AS no
				, p.post_seq
				, p.tag
				, p.title
				, p.content
				, p.created_at
				, p.updated_at
				, p.view_count
				, p.file_seq
				, p.ut_seq  
				, ut.user_id
				, ut.team_seq
				, ut.role
				, ut.nick
				,(select count(cmmnt_seq) from comments where post_seq=p.post_seq) AS totalComments
				,(select count(like_seq) from likes where post_seq=p.post_seq) AS totalLikes
			FROM posts p
				LEFT JOIN users_team ut 
				ON p.ut_seq = ut.ut_seq 
			WHERE 
				ut.team_seq = #{param1}
				<if test='!param2.equals("") or param2 != ""'>
					AND p.tag LIKE #{param2}
				</if>
				<if test='param6 != null and param6 != ""'>
					<choose>
						<when test='param5.equals("제목")'>
						AND p.title LIKE CONCAT("%",#{param6},"%")
						</when>
						<when test='param5.equals("내용")'>
						AND p.content LIKE CONCAT("%",#{param6},"%")
						</when>
						<when test='param5.equals("제목+내용")'>
						AND (p.title LIKE CONCAT("%",#{param6},"%") OR p.content LIKE CONCAT("%",#{param6},"%"))
						</when>
					</choose>
				</if>
			ORDER BY p.created_at DESC 
		) pn
		WHERE pn.no <![CDATA[>=]]> #{param3}
		AND  pn.no <![CDATA[<=]]> #{param4}
	</select>
	<!-- selectPostList (int teamSeq, String tag, int noPerPage, int page, String searchTag, String searchWord ) -->
	
	<select id="countBoardLength" resultType="Integer">
		SELECT count(*)  FROM posts p 
			LEFT JOIN users_team ut 
			ON p.ut_seq = ut.ut_seq 			
		WHERE 
			ut.team_seq = #{param1}
			<if test='!param2.equals("") or param2 != ""'>
					AND p.tag LIKE #{param2}
			</if>
			<if test='param4 != null and param4 != ""'>
				<choose>
					<when test='param3.equals("제목")'>
					AND p.title LIKE CONCAT('%',#{param4},'%')
					</when>
					<when test='param3.equals("내용")'>
					AND p.content LIKE CONCAT('%',#{param4},'%')
					</when>
					<when test='param3.equals("제목+내용")'>
					AND ( p.title LIKE CONCAT('%',#{param4},'%')
					OR p.content LIKE CONCAT('%',#{param4},'%') )
					</when>
				</choose>
			</if>
	</select>
	<!-- countBoardLength (int teamSeq, String tag, String searchTag, String searchWord ) -->
	
	<update id="updatePost" parameterType="com.allabo.vo.PostVO">
		UPDATE posts
		SET 
			tag = #{tag},
			title = #{title},
			content = #{content},
			updated_at = NOW(),
			file_seq = #{fileSeq}
		WHERE post_seq = #{postSeq}
	</update>
	
	<!-- 조회수 update -->
	<update id="updateViewCount">
		UPDATE posts
		SET 
			view_count = view_count+1
		WHERE post_seq = #{param1}
	</update>
	
	
	<!-- 조회수 update 게시판tag insert/update -->
	<!-- 댓글 insert/update -->
	
	<delete id="deletePost" parameterType="com.allabo.vo.PostVO">
		DELETE FROM posts
		WHERE post_seq = #{postSeq}
	</delete>

</mapper>